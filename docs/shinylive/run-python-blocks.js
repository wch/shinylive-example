"use strict";import{runApp as r}from"./shinylive.js";const a=[{class:"pyshiny",appMode:"editor-viewer",defaultFilename:"app.py"},{class:"pyshinyapp",appMode:"viewer",defaultFilename:"app.py"},{class:"pyterminal",appMode:"editor-terminal",defaultFilename:"code.py"},{class:"pycell",appMode:"editor-cell",defaultFilename:"code.py"}],c=a.map(i=>"."+i.class).join(", "),f=document.querySelectorAll(c);f.forEach(i=>{let s=null;for(const o of a)if(i.className.split(" ").includes(o.class)){s=o;break}if(!s){console.log("No mapping found for block ",i);return}const l=document.createElement("div");l.className="pyshiny-container",l.style.cssText=i.style.cssText,i.parentNode.replaceChild(l,i);const{lines:t,args:n}=m(i.innerText.split(`
`)),p={startFiles:g(t,s.defaultFilename),...n};r(l,s.appMode,p)});function m(i){const s=[...i],l={};let t=!0;for(;t&&s.length>0;){const n=s[0].match(/^#\|\s(?<prop>\w+):\s*(?<val>\w+)$/);if(n){s.splice(0,1);const{prop:e,val:p}=n.groups;!e||!p?console.warn("Invalid format of layout args. Ignoring...",n.groups):l[e]=p}else t=!1,Object.keys(l).length!==0&&s.length>=1&&s[0]===""&&s.splice(0,1)}return{lines:s,args:l}}function g(i,s){const l=[];let t={name:s,content:"",type:"text"},n="START";for(const e of i)if(n==="START")e.match(/^##\s?file:/)?(n="HEADER",t={name:e.replace(/^##\s?file:/,"").trim(),content:"",type:"text"}):e===""||(n="FILE_CONTENT",t.content+=e);else if(n==="HEADER")if(e.match(/^##\s?file:/))n="HEADER",l.push(t),t={name:e.replace(/^##\s?file:/,"").trim(),content:"",type:"text"};else if(e.match(/^##\s?type:/)){const p=e.replace(/^##\s?type:/,"").trim();p==="text"||p==="binary"?t.type=p:console.warn(`Invalid type string: "${e}".`)}else n="FILE_CONTENT",t.content+=e;else n==="FILE_CONTENT"&&(e.match(/^##\s?file:/)?(n="HEADER",l.push(t),t={name:e.replace(/^##\s?file:/,"").trim(),content:"",type:"text"}):t.content+=`
`+e);return l.push(t),l}
