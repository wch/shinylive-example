"use strict";function b(t){return new Promise(e=>setTimeout(e,t))}function d(t){return t==="/"||t===""?"":t.replace(/[/]?[^/]+[/]?$/,"")}function y(t){let e="";for(let r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e}async function A(t,e,r,o=i=>i){(typeof e=="string"||typeof r<"u")&&(e=new Request(e,r));let i=new MessageChannel,n=i.port1;t.postMessage({type:"makeRequest",scope:R(e)},[i.port2]);let c=await e.blob();if(!c.size)n.postMessage({type:"http.request",more_body:!1});else{let s=c.stream().getReader();try{for(;;){let{value:a,done:l}=await s.read();if(n.postMessage({type:"http.request",body:a,more_body:!l}),l)break}}finally{s.releaseLock()}}return new Promise(s=>{let a,l=new ReadableStream({start(u){a=u},cancel(u){}}),f;n.addEventListener("message",u=>{let p=u.data;if(p.type==="http.response.start")f=_(p,l),s(f);else if(p.type==="http.response.body")p.body&&a.enqueue(o(p.body,f)),p.more_body||(a.close(),n.close());else throw new Error("Unexpected event type from clientPort: "+p.type)}),n.start()})}function w(t){let e=[];for(let[r,o]of t.entries())e.push([r,o]);return e}function R(t){let e=new URL(t.url);return{type:"http",asgi:{version:"3.0",spec_version:"2.1"},http_version:"1.1",method:t.method,scheme:e.protocol.replace(/:$/,""),path:e.pathname,query_string:e.search.replace(/^\?/,""),root_path:"",headers:w(t.headers)}}function _(t,e){return new Response(e,{headers:t.headers,status:t.status})}var P=!1,m="::prismExperimentsServiceworker",g="v6";self.addEventListener("install",t=>{t.waitUntil(Promise.all([self.skipWaiting(),caches.open(g+m)]))});self.addEventListener("activate",function(t){t.waitUntil((async()=>{await self.clients.claim();let e=await caches.keys();return Promise.all(e.filter(function(r){return r.indexOf(g+m)!==0}).map(function(r){return caches.delete(r)}))})())});self.addEventListener("fetch",function(t){let e=t.request,r=new URL(e.url);if(self.location.origin!==r.origin||r.pathname=="/esbuild")return;let o=/.*\/(app_[^/]+\/)/,i=o.exec(r.pathname);if(i){t.respondWith((async()=>{let n=5;for(;!h[i[1]];){if(n==0)return new Response(`Couldn't find parent page for ${r}`,{status:404});console.log("App URL not registered. Waiting 50ms."),await b(50),n--}r.pathname=r.pathname.replace(o,"/");let s=r.pathname==="/"?x:S,a=await e.blob();return A(h[i[1]],new Request(r.toString(),{method:e.method,headers:e.headers,body:e.method==="GET"||e.method==="HEAD"?void 0:a,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer}),void 0,s)})());return}e.method==="GET"&&P&&t.respondWith((async()=>{let n=await caches.match(e);if(n)return n;try{let c=await fetch(e),s=self.location.origin+d(self.location.pathname);return(e.url.startsWith(s+"/shinylive/")||e.url===s+"/favicon.ico")&&(await caches.open(g+m)).put(e,c.clone()),c}catch{return new Response("Failed to find in cache, or fetch.",{status:404})}})())});var h={};(async()=>{let t=await self.clients.matchAll();for(let e of t)e.postMessage({type:"serviceworkerStart"})})();self.addEventListener("message",t=>{let e=t.data;if(e.type==="configureProxyPath"){let r=e.path,o=t.ports[0];h[r]=o}});function S(t,e){return t}function x(t,e){let r=e.headers.get("content-type");if(r&&/^text\/html(;|$)/.test(r)){let o=y(t),i=d(self.location.pathname),n=o.replace(/<\/head>/,`<script src="${i}/shinylive/inject-socket.js"><\/script>
</head>`);return Uint8Array.from(n.split("").map(s=>s.charCodeAt(0)))}return t}
